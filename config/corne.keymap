/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        hml: hml {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_LEFT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            hold-trigger-key-positions = <39 40 41 30 18 6 7 19 31 32 20 8 9 21 33 34 22 10 11 23 35 2 14 13>;
            flavor = "tap-preferred";
        };
        hmr: hmr {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_RIGHT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            hold-trigger-key-positions = <12 0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38>;
            flavor = "tap-preferred";
        };
        lp: lp {
            compatible = "zmk,behavior-hold-tap";
            label = "LONG_PRESS";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-preferred";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |
            label = "QWERTY";
            bindings = <
&to 4         &lp EXCLAMATION Q  &lp AT_SIGN W      &lp POUND E      &lp DOLLAR R         &kp T                &kp Y     &lp LEFT_PARENTHESIS U  &lp UNDERSCORE I  &lp MINUS O         &lp EQUAL P         &kp BSPC
&kp DELETE    &hml LEFT_WIN A    &hml LEFT_SHIFT S  &hmr LEFT_ALT D  &hml LEFT_CONTROL F  &kp G                &kp H     &hmr RIGHT_CONTROL J    &hmr RIGHT_ALT K  &hmr RIGHT_SHIFT L  &kp SINGLE_QUOTE    &kp SEMICOLON
&caps_word    &lp LC(Z) Z        &lp LC(X) X        &lp LC(C) C      &lp LC(V) V          &kp B                &kp N     &kp M                   &kp COMMA         &kp DOT             &lp QUESTION SLASH  &kp ESC
                                                    &lt 1 TAB        &lt 3 BACKSPACE      &lt 2 BACKSPACE      &kp RET   &lt 1 SPACE             &kp ESC
            >;
        };

        arrows_layer {
            label = "Arrows";
            bindings = <
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1    &bt BT_SEL 2  &bt BT_SEL 3      &bt BT_SEL 4    &trans  &kp C_VOLUME_DOWN  &kp UP_ARROW      &kp C_VOLUME_UP  &kp C_MUTE  &trans
&none       &kp LEFT_WIN  &kp LEFT_SHIFT  &kp LEFT_ALT  &kp LEFT_CONTROL  &trans          &trans  &kp LEFT_ARROW     &kp DOWN_ARROW    &kp RIGHT_ARROW  &trans      &trans
&none       &trans        &trans          &trans        &trans            &trans          &trans  &kp C_PREVIOUS     &kp C_PLAY_PAUSE  &kp C_NEXT       &trans      &trans
                                          &trans        &trans            &trans          &trans  &trans             &trans
            >;
        };

        numpad_layer {
            label = "NumPad";
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp MINUS  &kp ASTERISK
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp KP_N4        &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp PLUS   &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp SLASH  &trans
                        &trans  &trans  &trans    &trans  &kp KP_NUMBER_0  &kp PERIOD
            >;
        };

        symbols {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            label = "Symbols";
            bindings = <
&none  &none      &none          &none        &none    &none          &none   &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp ASTERISK  &kp PLUS       &kp BSPC
&none  &kp GRAVE  &kp TILDE      &kp PERCENT  &kp TAB  &kp LS(TAB)    &none   &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp EQUAL     &kp COLON      &none
&none  &none      &kp BACKSLASH  &kp PIPE     &none    &none          &none   &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp CARET     &kp SEMICOLON  &none
                                 &trans       &trans   &trans         &trans  &kp SPACE             &trans
            >;
        };

        colemak {
            label = "Colemak";
            bindings = <
&to 0   &kp Q  &kp W  &kp F   &kp P   &kp B     &kp J   &kp L      &kp U      &kp Y       &kp SINGLE_QUOTE    &trans
&trans  &kp A  &kp R  &kp S   &kp T   &kp G     &kp M   &kp N      &kp E      &kp I       &kp O               &kp SEMICOLON
&trans  &kp Z  &kp X  &kp C   &kp D   &kp V     &kp K   &kp H      &kp COMMA  &kp PERIOD  &lp QUESTION SLASH  &trans
                      &trans  &trans  &trans    &trans  &kp SPACE  &trans
            >;
        };
    };
};
