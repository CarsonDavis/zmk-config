/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        hml: hml {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_LEFT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            hold-trigger-key-positions = <39 40 41 30 18 6 7 19 31 32 20 8 9 21 33 34 22 10 11 23 35 2 14 13 37 38 15 16>;
            flavor = "tap-preferred";
            require-prior-idle-ms = <125>;
        };

        hmr: hmr {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_RIGHT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            hold-trigger-key-positions = <12 0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38 20 19 21>;
            flavor = "tap-preferred";
            require-prior-idle-ms = <125>;
        };

        lp: lp {
            compatible = "zmk,behavior-hold-tap";
            label = "LONG_PRESS";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-preferred";
            require-prior-idle-ms = <125>;
        };

        skq: skq {
            compatible = "zmk,behavior-sticky-key";
            label = "sticky_key_quick_release";
            #binding-cells = <1>;
            bindings = <&kp>;

            release-after-ms = <1000>;
            quick-release;
            ignore-modifiers;
        };

        mo_ss: behavior_mo_ss {
            compatible = "zmk,behavior-hold-tap";
            label = "mo_ss";
            #binding-cells = <2>;
            bindings = <&mo>, <&skq>;

            tapping-term-ms = <200>;
            flavor = "tap-preferred";
        };

        col_semi: colon_semicolon {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp COLON>, <&kp SEMI>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "QWERTY";
            bindings = <
&to 1                   &lp EXCLAMATION Q  &lp AT_SIGN W      &lp POUND E           &lp DOLLAR R         &lp PERCENT T              &lp ASTERISK Y  &lp LEFT_PARENTHESIS U   &lp UNDERSCORE I       &lp MINUS O         &lp EQUAL P                 &to 2
&kp DELETE              &hml LEFT_WIN A    &hml LEFT_SHIFT S  &hml LEFT_ALT D       &hml LEFT_CONTROL F  &kp G                      &kp H           &hmr RIGHT_CONTROL J     &hmr RIGHT_ALT K       &hmr RIGHT_SHIFT L  &lp SEMICOLON SINGLE_QUOTE  &lp SEMICOLON COLON
&caps_word              &lp LC(Z) Z        &lp LC(X) X        &lp LC(C) C           &lp LC(V) V          &kp B                      &kp N           &kp M                    &kp COMMA              &kp DOT             &lp SLASH QUESTION          &kp SLASH
                                                              &lp LEFT_SHIFT TILDE  &lt 4 BACKSPACE      &lt 5 TAB                  &lt 5 RET       &lt 3 SPACE              &kp ESC
            >;
        };
        colemak {
            label = "Colemak";
            bindings = <
&to 0                   &kp Q              &kp W              &kp F                 &kp P                &kp B                      &kp J           &kp L                    &kp U                   &kp Y               &kp SINGLE_QUOTE           &to 2
&trans                  &kp A              &kp R              &kp S                 &kp T                &kp G                      &kp M           &kp N                    &kp E                   &kp I               &kp O                      &lp SEMICOLON COLON
&trans                  &kp Z              &kp X              &kp C                 &kp D                &kp V                      &kp K           &kp H                    &kp COMMA               &kp PERIOD          &lp SLASH QUESTION         &kp SLASH
                                                              &kp TILDE             &kp BACKSPACE        &kp BACKSPACE              &kp RET         &kp SPACE                &kp ESC
            >;
        };
        colemak_full {
            label = "C-dh f";
            bindings = <
&to 0                   &lp EXCLAMATION Q  &lp AT_SIGN W      &lp POUND F           &lp DOLLAR P         &lp PERCENT B              &lp ASTERISK J  &lp LEFT_PARENTHESIS L   &lp UNDERSCORE U       &lp MINUS Y         &lp EQUAL SINGLE_QUOTE      &to 2
&lp LC(GRAVE) LG(GRAVE) &hml LEFT_WIN A    &hml LEFT_SHIFT R  &hml LEFT_ALT S       &hml LEFT_CONTROL T  &kp G                      &kp M           &hmr RIGHT_CONTROL N     &hmr RIGHT_ALT E       &hmr RIGHT_SHIFT I  &kp O                       &lp SEMICOLON COLON
&caps_word              &lp LC(Z) Z        &lp LC(X) X        &lp LC(C) C           &lp LC(V) D          &kp V                      &kp K           &kp H                    &kp COMMA              &kp PERIOD          &lp SLASH QUESTION          &kp SLASH
                                                              &lt 4 TAB             &lt 5 BACKSPACE      &mo_ss 4 LSHIFT            &lt 5 RET       &lt 3 SPACE              &kp ESC
            >;
        };
        arrows_layer {
            label = "Arrows";
            bindings = <
&bt BT_CLR              &bt BT_SEL 0        &bt BT_SEL 1      &bt BT_SEL 2          &bt BT_SEL 3         &bt BT_SEL 4               &trans          &kp C_VOLUME_DOWN        &kp UP_ARROW           &kp C_VOLUME_UP    &kp C_MUTE                  &trans
&none                   &kp LEFT_WIN        &kp LEFT_SHIFT    &kp LEFT_ALT          &kp LEFT_CONTROL     &trans                     &trans          &kp LEFT_ARROW           &kp DOWN_ARROW         &kp RIGHT_ARROW    &trans                      &trans
&none                   &trans              &trans            &trans                &trans               &trans                     &trans          &kp C_PREVIOUS           &kp C_PLAY_PAUSE       &kp C_NEXT         &trans                      &trans
                                                              &trans                &trans               &trans                     &trans          &trans                   &trans
            >;
        };
        numpad_layer {
            label = "NumPad";
            bindings = <
&trans                  &trans              &trans            &trans               &trans                &trans                    &trans          &lp LC(LS(N7)) N7         &lp LC(LS(N8)) N8      &lp LC(LS(N9)) N9  &kp MINUS                  &kp ASTERISK
&trans                  &kp LEFT_WIN        &kp LEFT_SHIFT    &kp LEFT_ALT         &kp LEFT_CONTROL      &kp TAB                   &none           &lp LC(LS(N4)) N4         &kp N5                 &kp N6             &kp PLUS                   &none
&trans                  &trans              &trans            &trans               &kp RET               &kp ESC                   &none           &lp LA(LC(N1)) N1         &lp LA(LC(N2)) N2      &lp LA(LC(N3)) N3  &kp SLASH                  &none
                                                              &trans               &trans                &trans                    &none           &kp KP_NUMBER_0           &kp PERIOD
            >;
        };
        symbols {
            label = "Symbols";
            bindings = <
&none                   &none               &kp GRAVE         &kp TILDE            &kp SLASH             &kp CARET                 &kp AMPERSAND   &kp LEFT_BRACE            &kp RIGHT_BRACE        &kp MINUS           &kp PLUS                  &kp PIPE
&none                   &kp EXCLAMATION     &kp AT_SIGN       &kp POUND            &kp DOLLAR            &kp PERCENT               &kp ASTERISK    &kp LEFT_PARENTHESIS      &kp RIGHT_PARENTHESIS  &kp UNDERSCORE      &kp EQUAL                 &kp SEMICOLON 
&none                   &none               &none             &none                &none                 &none                     &none           &kp LEFT_BRACKET          &kp RIGHT_BRACKET      &kp LESS_THAN       &kp GREATER_THAN          &kp BACKSLASH
                                                              &trans               &trans                &trans                    &trans          &kp SPACE                 &trans
            >;
        };
    };
};
